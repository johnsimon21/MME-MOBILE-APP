/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * MME API Documentation
 * 
      API documentation for Meu Mentor Eiffel system
      
      ## Authentication
      This API uses Firebase Authentication with Bearer tokens.
      
      ## Base URL
      - Development: http://localhost:3000/api
      - Production: https://your-domain.com/api
      
      ## Rate Limiting
      - 100 requests per 15 minutes per IP
      - Additional limits may apply to specific endpoints
      
      ## Error Handling
      All endpoints return consistent error responses with proper HTTP status codes.
    
 * OpenAPI spec version: 1.0.0
 */
import type { DevAuthExchangeCustomTokenBody } from ".././model";

import { customInstance } from "../../custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getDevelopmentAuthHelpers = () => {
  /**
   * Development helper to exchange custom token for proper ID token
   * @summary üöß DEV - Exchange custom token for ID token
   */
  const devAuthExchangeCustomToken = (
    devAuthExchangeCustomTokenBody: DevAuthExchangeCustomTokenBody,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<void>(
      {
        url: `/api/auth/dev/exchange-custom-token`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: devAuthExchangeCustomTokenBody,
      },
      options,
    );
  };
  /**
   * Get user information for development testing
   * @summary üöß DEV - Get user info for testing
   */
  const devAuthGetUserInfo = (
    userId: string,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<void>(
      { url: `/api/auth/dev/user-info/${userId}`, method: "GET" },
      options,
    );
  };
  /**
   * Get list of available development endpoints
   * @summary üöß DEV - List test endpoints
   */
  const devAuthGetTestEndpoints = (
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<void>(
      { url: `/api/auth/dev/test-endpoints`, method: "GET" },
      options,
    );
  };
  return {
    devAuthExchangeCustomToken,
    devAuthGetUserInfo,
    devAuthGetTestEndpoints,
  };
};
export type DevAuthExchangeCustomTokenResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDevelopmentAuthHelpers>["devAuthExchangeCustomToken"]
    >
  >
>;
export type DevAuthGetUserInfoResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDevelopmentAuthHelpers>["devAuthGetUserInfo"]
    >
  >
>;
export type DevAuthGetTestEndpointsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDevelopmentAuthHelpers>["devAuthGetTestEndpoints"]
    >
  >
>;
